
.286
;-------------------------------------------------------------------------

STACKSG SEGMENT

	PILA DW 0FFFH DUP(0)

STACKSG ENDS

;-------------------------------------------------------------------------

DATASG SEGMENT

;Variables

MAS_SLA 	DB	0;MASTER=0, SLAVE=1
;POSICIONES
PELX		DB	40
PELY		DB	12
MASY		DB	12
SLAY		DB	12
FILA		DB	0
COL			DB	0
SCRMAS		DB	0
SCRSLV		DB	0
;VARIOS
ESTADO		DB	0
DIR			DB	1
CONT		DB	0
PUNTM		DB	48
PUNTS		DB	48
GAMEO		DB	0
;CHAR
CAR			DB	0
ASC			DB	0
C_PEL		DB	7
C_JUG1		DB	176
C_JUG2		DB	178
C_BORR		DB	0
TECLA		DB	0
DATO		DB	0

FileName  	DB 		"obsta.txt",0
FileHandle 	DW 		0
Buffer    	DB  	81	DUP(0)
BytesRead 	DW  	0
FileSize  	DD  	0

COM1    	EQU     3F8H             
LCR     	EQU     3FBH            ;Line control register
LSR     	EQU     3FDH            ;Line status register 
FCR     	EQU     3FAH            ;FIFO CONTROL REGISTER
IIR     	EQU     3FAH            ;INTERRUPT IDENT REGISTER
IER     	EQU     3F9H            ;INTERRUPT ENABLE REGISTER
MCR    		EQU     3FCH            ;MODEM CONTROL REGISTER

PIC     	EQU     20H             ;PROGRAMMABLE INTERRUPT CONTROLLER


;STRING
PUNT		DB	' MAS 0 - SLV 0 $'
MSG1		DB	'MASTER$'
MSG2		DB	'SLAVE$'
MSG3		DB	' --GAME OVER!-- $'
MSG4		DB	'GANO  $'
MSG5		DB	'ERROR AL CARGAR EL ARCHIVO! $'
DATASG ENDS

;-------------------------------------------------------------------

CODESG	SEGMENT

BEGIN PROC

	ASSUME SS:STACKSG,DS:DATASG,CS:CODESG
	MOV AX,DATASG ;Obtiene dirección de segmento de datos
	MOV DS,AX ;Se lo carga en DS
	MOV AX,0B800H
	MOV ES,AX ;SEGMENTO PANTALLA
	MOV DI,0

INICIO:
	CALL 	CLRSCR
	CALL	OBSTA
	CALL 	OPENPORT
	CALL	GUI
	CALL	PRINTPEL
	CALL	PRINTMAS
	CALL	PRINTSLV
BUCLE:
	CMP		GAMEO,1
	JNE		S4
	JMP		SALIR
S4:
	CALL	DELAY
	CMP		MAS_SLA,0
	JNZ		S2
	CMP		ESTADO,1
	JNE		S2
	CALL	DELAY
	CALL	DELAY
	CALL	DELAY
	CALL	MOVPEL
S2:
	CALL 	READPORT
	MOV 	AH,01
	INT 	16h
	JZ 		BUCLE
	
;SI NO HAY CARACTER
	MOV		AH,0		;SACA LA TECLA DEL BUFFER
	INT 	16H
	MOV		ASC,AL
	MOV		TECLA,AH
	
	CMP		ESTADO,0
	JNE		ESTADO1
	CMP		ASC,'c'
	JNE		BUCLE
	MOV		DATO,'c'
	CALL	WRITEPORT
	;SI LEO UNA C MANDO POR EL PUERTO
	JMP		BUCLE
ESTADO1:
	CMP		ESTADO,1
	JNE		ESTADO2
	CMP		MAS_SLA,0
	JE		MOV_MAS
	JMP		MOV_SLV

MOV_MAS:
	CALL	MOVMAS
	CALL	TXMAS
	JMP		FINESTADO1
MOV_SLV:
	CALL	MOVSLV
	CALL	TXSLA
	JMP		FINESTADO1
FINESTADO1:
	CALL	REFRESH
	CMP		ASC,'q'
	JE		SALIR
	JMP		BUCLE
ESTADO2:
	CMP		ASC,'q'
	JE		SALIR
	JMP		BUCLE
SALIR:
	CALL	GETKEY
	CMP		ASC,'q'
	JNE		SALIR
	MOV 	AX,4C00H
	INT 	21H
	BEGIN ENDP

;-------------------------------------------------------------------
READPORT PROC
	PUSHA

	MOV	DX,LSR
	IN 	AL,DX
	AND	AL,1
	JNZ	S1
	JMP	FINREADP	;NO HAY NADA
S1:
	MOV	DX,COM1
	IN	AL,DX	;LEO EL DATO
	MOV	DATO,AL

	;VERIFICO SI RECIBI UNA C
	CMP	ESTADO,0
;RECIBI C?
	JNE	EST1
	CMP	DATO,'c'
	JE	SOYSLV
;RECIBI A?
	CMP	DATO,'a'
	JE	SOYMAS
	JMP	FINREADP

	
SOYMAS:
	MOV		MAS_SLA,0;MASTER
	MOV		ESTADO,1
	JMP 	FINREADP
	
SOYSLV:
	MOV		MAS_SLA,1;SLV
	MOV		DATO,'a'
	CALL	WRITEPORT
	MOV		ESTADO,1
	JMP		FINREADP

EST1:
	CMP		ESTADO,1
	JNE		EST2
	CMP		DATO,'m'
	JE		FINEST1
	JMP		EST3
	;TENGO QUE RECIBIR LA M
	;SI RECIBI LA M, REFRESH
FINEST1:
	;CAMBIO EL ESTADO A 2
	MOV		ESTADO,2
	JMP		FINREADP
EST2:
	CMP		ESTADO,2
	JNE		EST3
	CMP		MAS_SLA,0
	JE		EST2_MAS
	JMP		EST2_SLV
EST2_MAS:
	MOV		AL,DATO
	MOV		SLAY,AL
	CALL	REFRESH
	MOV		ESTADO,1
	JMP		FINREADP
EST2_SLV:
	MOV		AL,DATO
	MOV		MASY,AL
	CALL	REFRESH
	MOV		ESTADO,1
	JMP		FINREADP
EST3:
	CMP		ESTADO,1
	JNE		EST4
	CMP		DATO,'p'
	JE		FINEST3
	JMP		FINREADP
FINEST3:
	CALL	BORRPEL
	MOV		ESTADO,4
	JMP		FINREADP
EST4:	
	CMP		ESTADO,4
	JNE		EST5
	MOV		AL,DATO
	MOV		PELX,AL
	MOV		ESTADO,5
	JMP		FINREADP
EST5:	
	CMP		ESTADO,5
	JNE		FINREADP
	MOV		AL,DATO
	MOV		PELY,AL
	MOV		ESTADO,1
	CALL	PRINTPEL
	;CMP		PELX,79
	;JE		REF
	;CMP		PELX,1
	;JE		REF
	;JMP		FINEST5
REF:
	CALL	REFRESH
FINEST5:
	CALL	SCORE
	JMP		FINREADP
	
FINREADP:
	POPA
	RET
READPORT ENDP
;-------------------------------------------------------------------
OPENPORT PROC
	PUSHA
	MOV     AH,00H
	MOV     AL,11101010B    ;111->9600 baudios,01->paridad impar
							;0->1 bit de stop, 10->7 bits de datos
    MOV     DX,0            ;COM 1
	INT     14H
	MOV     DX,FCR
	MOV     AL,00000111B
	OUT     DX,AL           ;SETEO LA FIFO
	POPA
	RET
OPENPORT ENDP
;-------------------------------------------------------------------
WRITEPORT PROC NEAR
	PUSHA
    MOV     DX,COM1
	MOV		AL,DATO
	OUT     DX,AL
    MOV     DX,LSR
	IN		AL,DX
WRITEP:
	AND		AL,01000000b
	JZ		WRITEP
	
	POPA
	RET
WRITEPORT ENDP

;-------------------------------------------------------------------
;PROCEDURES
;SETCUR POSICIONA EL CURSOR DE PANTALLA EN DH = FILA, DL = COLUMNA

SETCUR PROC
	
	PUSHA
	MOV AH,02H
	MOV BH,0
	MOV DH,FILA
	MOV DL,COL
	INT 10H
	POPA
	RET

SETCUR ENDP

;-------------------------------------------------------------------
;WRITE ESCRIBE CARACTER EN PANTALLA AL = character to display.

WRITE PROC

	PUSHA
	MOV AH,0AH
	MOV BH,0
	MOV AL,CAR
	MOV CX,1
	INT 10H
	POPA
	RET
	

WRITE ENDP
;-------------------------------------------------------------------
;WRITE ESCRIBE CARACTER EN PANTALLA AL = character to display.

BORRAR PROC

	PUSHA
	MOV AH,0AH
	MOV BH,0
	MOV AL,' '
	MOV CX,1
	INT 10H
	POPA
	RET
	
BORRAR ENDP

;-------------------------------------------------------------------

;GETKEY TOMA UNA TECLA AH = BIOS scan code, AL = ASCII character
;BORRA BUFFER.

GETKEY PROC

	PUSHA
	MOV 	AH,1
	INT 	16H
	JNZ		FINGETKEY
	MOV 	AH,0
	INT 	16H
	MOV 	TECLA,AH
	MOV 	ASC,AL
FINGETKEY:
	POPA
	RET	

GETKEY ENDP
;-------------------------------------------------------------------
WAITKEY PROC
	PUSHA
	MOV 	AH,0
	INT 	16H
	MOV 	TECLA,AH
	MOV 	ASC,AL
FINWAITKEY:
	POPA
	RET	

WAITKEY ENDP


;-------------------------------------------------------------------
READCHAR PROC
	PUSHA
	MOV 	AH,08
	INT 	10H
	MOV 	ASC,AL
FINREADCHAR:
	POPA
	RET	

READCHAR ENDP
;-------------------------------------------------------------------
DELAY PROC
	MOV		BX,01FFH
B1:
	MOV		AX,0FFFFH
B2:
	DEC		AX
	JNZ		B2
B3:
	DEC		BX
	JNZ		B1
	RET
DELAY ENDP
;--------------------------------------------------------------------

CLRSCR PROC

	MOV	FILA,0
	MOV	COL,0
	MOV	CAR,' '
BORR:
	MOV	DH,FILA
	MOV	DL,COL
	CALL	SETCUR
	CALL	WRITE
	INC	COL
	CMP	COL,80
	JL	BORR
	MOV	COL,0
	INC	FILA
	CMP	FILA,24
	JL	BORR
	MOV	FILA,0
	MOV	COL,0
	CALL	SETCUR
	RET

CLRSCR ENDP	 
;-------------------------------------------------------------------
OBSTA 	PROC
	PUSHA	
	MOV		AX,3D00H	;READ ONLY
	MOV     DX,offset FileName
	INT	    21H
	MOV     [FileHandle],AX
	JC		FINOBSTAERR	;ERROR
	MOV		FILA,0
	MOV		COL,0
	CALL	SETCUR
LEO:
	MOV		AX,[BytesRead]
	MOV     bx,[FileHandle]
    MOV     dx,offset buffer
	MOV     ah,3Fh
    MOV     cx,80
    INT     21h
	
	MOV 	SI,80
	MOV		AL,'$'
    LEA 	BX,buffer     
    MOV 	BX[SI],AL   ;EN AL TENGO EL ELEMENTO SI
	
	LEA		DX,BUFFER
	MOV		AH,9H
	INT		21H
	INC		FILA
	CMP		FILA,25
	JNE		LEO
	JC		FINOBSTAERR	;ERROR
	
FINLEO:
	MOV     BX,[FileHandle]
    MOV     AH,3EH
    INT     21H
	JC		FINOBSTAERR	;ERROR
	JMP		FINOBSTA
	
FINOBSTAERR:
	LEA		DX,MSG5
	MOV		AH,9H
	INT		21H
	
FINOBSTA:
	MOV		FILA,0
	MOV		COL,0
	CALL	SETCUR
	POPA
	RET

OBSTA 	ENDP
;-------------------------------------------------------------------

GUI PROC
	MOV	COL,0
	MOV	FILA,0
MARCOSUP:
	MOV	CAR,205
	CALL	SETCUR
	CALL	WRITE
	INC	COL
	CMP	COL,80
	JNE	MARCOSUP
CENTRO:
	MOV	COL,35
	MOV	FILA,0
	CALL	SETCUR	
	LEA	DX,PUNT
	MOV	AH,9H
	INT	21H
	RET

GUI ENDP      
;-------------------------------------------------------------------

PRINTMAS PROC
	
	PUSHA
	MOV	COL,0
	MOV	AH,MASY
	DEC	AH
	MOV	FILA,AH
	MOV	CAR,176;CARACTER DEL J1
	CALL	SETCUR
	CALL	WRITE
	INC	FILA
	CALL	SETCUR
	CALL	WRITE
	INC	FILA
	CALL	SETCUR
	CALL	WRITE
	POPA
	RET

PRINTMAS ENDP

;-------------------------------------------------------------------

PRINTSLV PROC
	
	PUSHA
	MOV	COL,79
	MOV	AH,SLAY
	DEC	AH
	MOV	FILA,AH
	MOV	CAR,178;CARACTER DEL J1
	CALL	SETCUR
	CALL	WRITE
	INC	FILA
	CALL	SETCUR
	CALL	WRITE
	INC	FILA
	CALL	SETCUR
	CALL	WRITE
	POPA
	RET

PRINTSLV ENDP

;-------------------------------------------------------------------
READSLA PROC
	PUSHA
	CALL	READPORT
	MOV		AH,DATO
	CALL	READPORT
	MOV		AL,DATO
	CMP		AH,'m'
	JNE		FINREADSLA
	MOV		AL,DATO
	MOV		SLAY,AL
FINREADSLA:
	POPA
	RET
READSLA ENDP

;-------------------------------------------------------------------
READMAS PROC
	PUSHA
	CALL	READPORT
	MOV		AH,DATO
	CALL	READPORT
	MOV		AL,DATO
	CMP		AH,'m'
	JNE		FINREADMAS
	MOV		MASY,AL
FINREADMAS:
	POPA
	RET
READMAS ENDP

;-------------------------------------------------------------------

REFRESH PROC
	
	PUSHA
	MOV	COL,0
	MOV	FILA,1
	MOV	CAR,' '

BORRCOL1:
	CALL	SETCUR
	CALL	WRITE	
	INC	FILA
	CMP	FILA,25
	JNE	BORRCOL1

	MOV	FILA,1
	MOV	COL,79

BORRCOL2:
	CALL	SETCUR
	CALL	WRITE	
	INC	FILA
	CMP	FILA,25
	JNE	BORRCOL2
	
	CALL	PRINTMAS
	CALL	PRINTSLV

	POPA
	RET

REFRESH ENDP

;-------------------------------------------------------------------

PRINTPEL PROC
	
	PUSHA
	CMP		GAMEO,1
	JE		FINPRINTPEL
	MOV		AH,PELX
	MOV		COL,AH
	MOV		AH,PELY
	MOV		FILA,AH
	MOV		CAR,7
	CALL	SETCUR
	CALL	WRITE
FINPRINTPEL:
	POPA
	RET

PRINTPEL ENDP
;-------------------------------------------------------------------

BORRPEL PROC
	
	PUSHA
	MOV	AH,PELX
	MOV	COL,AH
	MOV	AH,PELY
	MOV	FILA,AH
	MOV	CAR,' '
	CALL	SETCUR
	CALL	WRITE
	POPA
	RET

BORRPEL ENDP
;-------------------------------------------------------------------

MOVMAS PROC
	PUSHA
START_MOVMAS:
	CMP	TECLA,48H;ARRIBA
	JE	UP1
	CMP	TECLA,50H;ARRIBA
	JE	DOWN1
	JMP	FINMOVMAS
UP1:
	CMP	MASY,2
	JE	FINMOVMAS
	DEC	MASY
	JMP	FINMOVMAS
DOWN1:
	CMP	MASY,23
	JE	FINMOVMAS	
	INC	MASY
	JMP	FINMOVMAS

FINMOVMAS:
	POPA
	RET
MOVMAS ENDP

;-------------------------------------------------------------------
MOVSLV PROC
	PUSHA

START_MOVSLV:
	CMP	TECLA,48H;ARRIBA
	JE	UP2
	CMP	TECLA,50H;ARRIBA
	JE	DOWN2
	JMP	FINMOVSLV
UP2:
	CMP	SLAY,2
	JE	FINMOVSLV
	DEC	SLAY
	JMP	FINMOVSLV
DOWN2:
	CMP	SLAY,23
	JE	FINMOVSLV
	INC	SLAY
	JMP	FINMOVSLV

FINMOVSLV:
	POPA
	RET
MOVSLV ENDP
;-------------------------------------------------------------------
TXMAS PROC
	PUSHA
	MOV		DATO,'m'
	CALL	WRITEPORT
	MOV		AL,MASY
	MOV		DATO,AL
	CALL	WRITEPORT
	POPA
	RET
TXMAS ENDP
;-------------------------------------------------------------------
TXSLA PROC
	PUSHA
	MOV		DATO,'m'
	CALL	WRITEPORT
	MOV		AL,SLAY
	MOV		DATO,AL
	CALL	WRITEPORT
	POPA
	RET
TXSLA ENDP
;-------------------------------------------------------------------
TXPEL PROC
	PUSHA
	MOV		DATO,'p'
	CALL	WRITEPORT
	MOV		AL,PELX
	MOV		DATO,AL
	CALL	WRITEPORT
	MOV		AL,PELY
	MOV		DATO,AL
	CALL	WRITEPORT
	POPA
	RET
TXPEL ENDP
;-------------------------------------------------------------------

MOVPEL PROC
;3       2
;    *
;4       1

	PUSHA

START_MOVPEL:
	CALL    DELAY

	CALL	BORRPEL
	CMP		DIR,1
	JE		MOV_D1
	CMP		DIR,2
	JE		MOV_D2
	CMP		DIR,3
	JE		MOV_D3
	CMP		DIR,4
	JE		MOV_D4
MOV_D1: 
	INC		PELY
	INC		PELX
	JMP		FINMOVPEL
MOV_D2:
	DEC		PELY
	INC		PELX
	JMP		FINMOVPEL
MOV_D3:
	DEC		PELY
	DEC		PELX
	JMP		FINMOVPEL
MOV_D4:
	INC		PELY
	DEC		PELX
	JMP		FINMOVPEL

FINMOVPEL:
	CALL	REBOTE
	CALL	PRINTPEL
	CALL	TXPEL
	CALL	SCORE
	POPA
	RET
MOVPEL ENDP

;-------------------------------------------------------------------
REBOTE PROC	
	PUSHA
	MOV		AL,PELX
	MOV		COL,AL
	MOV		AL,PELY
	MOV		FILA,AL
	CALL	SETCUR
	CMP		DIR,1
	JE		REB_D1
	CMP		DIR,2
	JE		REB_D2
	CMP		DIR,3
	JNE		S7		
	JMP		REB_D3
S7:
	CMP		DIR,4
	JNE		S5
	JMP		REB_D4
S5:
REB_D1:
	CMP		PELX,79
	JNE		D1	
	MOV		AL,SLAY
	CMP		PELY,AL
	JE		SLA_UP1	;PEGO ARRIBA
	INC		AL
	CMP		PELY,AL
	JE		SLA_MID1	;PEGO MEDIO
	INC		AL
	CMP		PELY,AL
	JE		SLA_DOWN1;PEGO ABAJO	
	JMP		FINREB
SLA_UP1:
	JMP		CHGDIR4MS
SLA_MID1:
	JMP		CHGDIR4MS
SLA_DOWN1:
	JMP		CHGDIR4MS
D1:
	CMP		PELY,25
	JNE		S6
	JMP		CHGDIR2
S6:
	CALL	READCHAR
	CMP		ASC,'X'
	JNE		S9
	JMP		CHGDIR4MS
S9:
	JMP		FINREB
REB_D2:
	CMP		PELX,79
	JNE		D2
	MOV		AL,SLAY
	CMP		PELY,AL
	JE		SLA_UP2	;PEGO ARRIBA
	INC		AL
	CMP		PELY,AL
	JE		SLA_MID2	;PEGO MEDIO
	INC		AL
	CMP		PELY,AL
	JE		SLA_DOWN2;PEGO ABAJO	
	JMP		FINREB
SLA_UP2:
	JMP		CHGDIR3MS
SLA_MID2:
	JMP		CHGDIR3MS
SLA_DOWN2:
	JMP		CHGDIR3MS

D2:
	CMP		PELY,0
	JNE		S10
	JMP		CHGDIR1
S10:	
	CALL	READCHAR
	CMP		ASC,'X'
	JE		S11
	JMP		FINREB
S11:
	JMP		CHGDIR3MS
REB_D3:
	CMP		PELX,0
	JNZ		D3
	MOV		AL,MASY
	CMP		PELY,AL
	JE		MAS_UP1	;PEGO ARRIBA
	INC		AL
	CMP		PELY,AL
	JE		MAS_MID1	;PEGO MEDIO
	INC		AL
	CMP		PELY,AL
	JE		MAS_DOWN1;PEGO ABAJO	
	JMP		FINREB
MAS_UP1:
	JMP		CHGDIR2MS
MAS_MID1:
	JMP		CHGDIR2MS
MAS_DOWN1:
	JMP		CHGDIR2MS

D3:
	CMP		PELY,0
	JNE		S13
	JMP		CHGDIR4
S13:	
	CALL	READCHAR
	CMP		ASC,'X'
	JE		S12
	JMP		FINREB
S12:
	JMP		CHGDIR2MS
REB_D4:
	CMP		PELX,0
	JNZ		D4
	MOV		AL,MASY
	CMP		PELY,AL
	JE		MAS_UP2	;PEGO ARRIBA
	INC		AL
	CMP		PELY,AL
	JE		MAS_MID2	;PEGO MEDIO
	INC		AL
	CMP		PELY,AL
	JE		MAS_DOWN2;PEGO ABAJO	
	JMP		FINREB
MAS_UP2:
	JMP		CHGDIR1MS
MAS_MID2:
	JMP		CHGDIR1MS
MAS_DOWN2:
	JMP		CHGDIR1MS
D4:
	CMP		PELY,25
	JE		CHGDIR3
	CALL	READCHAR
	CMP		ASC,'X'
	JE		S14
	JMP		FINREB
S14:
	JMP		CHGDIR1MS
CHGDIR1:
	MOV		DIR,1
	INC		PELY
	INC		PELY
	JMP		FINREB	
CHGDIR2:
	MOV		DIR,2
	DEC		PELY
	DEC		PELY
	JMP		FINREB	
CHGDIR3:
	MOV		DIR,3
	DEC		PELY
	DEC		PELY
	JMP		FINREB	
CHGDIR4:
	MOV		DIR,4
	INC		PELY
	INC		PELY
	JMP		FINREB
CHGDIR1MS:
	MOV		DIR,1
	INC		PELX
	INC		PELX
	JMP		FINREB	
CHGDIR2MS:
	MOV		DIR,2
	INC		PELX
	INC		PELX
	JMP		FINREB	
CHGDIR3MS:
	MOV		DIR,3
	DEC		PELX
	DEC		PELX
	JMP		FINREB	
CHGDIR4MS:
	MOV		DIR,4
	DEC		PELX
	DEC		PELX
	JMP		FINREB	

FINREB:
	POPA
	RET
REBOTE ENDP
;-------------------------------------------------------------------
SCORE PROC
	PUSHA
	CMP		PELX,0
	JE		GOL_SLV
	CMP		PELX,80
	JE		GOL_MAS
	JMP		FINSCORE
GOL_MAS:
	CMP		PUNTM,57;48 AL 57 NUMEROS
	JE		GAMEOVER
	INC		PUNTM
	MOV		AL,PUNTM
	MOV		CAR,AL
	MOV		COL,40
	MOV		FILA,0
	CALL	SETCUR
	CALL	WRITE
	CALL	RESET
	JMP		FINSCORE
GOL_SLV:
	CMP		PUNTS,57;48 AL 57 NUMEROS
	JE		GAMEOVER
	INC		PUNTS
	MOV		AL,PUNTS
	MOV		CAR,AL
	MOV		COL,48
	MOV		FILA,0
	CALL	SETCUR
	CALL	WRITE
	CALL	RESET
	JMP		FINSCORE
GAMEOVER:
	CALL	CLRSCR
	MOV		COL,31
	MOV		FILA,12
	CALL	SETCUR	
	LEA		DX,MSG3
	MOV		AH,9H
	INT		21H
	MOV		GAMEO,1
	MOV		COL,33
	MOV		FILA,13
	CALL	SETCUR	
	LEA		DX,MSG4
	MOV		AH,9H
	INT		21H
	CMP		PUNTM,57
	JE		GANOMAS
	CMP		PUNTM,57
	JE		GANOSLV
GANOMAS:
	LEA		DX,MSG1
	MOV		AH,9H
	INT		21H
	JMP		FINSCORE
GANOSLV:
	LEA		DX,MSG1
	MOV		AH,9H
	INT		21H
	JMP		FINSCORE
FINSCORE:
	POPA
	RET
SCORE ENDP

;-------------------------------------------------------------------
RESET PROC
	PUSHA

	MOV		DIR,1
	MOV		ESTADO,1
	MOV		SLAY,12
	MOV		MASY,12
	MOV		PELX,40
	MOV		PELY,12
	CALL	PRINTPEL
	CALL	REFRESH
	POPA
	RET
RESET ENDP

;-------------------------------------------------------------------
CODESG ENDS

END BEGIN
